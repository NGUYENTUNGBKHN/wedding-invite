function getQueryParam(param) {
  const urlParams = new URLSearchParams(window.location.search);
  return urlParams.get(param);
}

const guestId = getQueryParam('guest');
const invitationDiv = document.getElementById('invitation');
const rsvpDiv = document.getElementById('rsvp');

if (!guestId) {
  invitationDiv.innerHTML = '<p>Link kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng c√≥ th√¥ng tin kh√°ch m·ªùi.</p>';
} else {
  db.collection('guests').doc(guestId).get()
    .then(doc => {
      if (doc.exists) {
        const data = doc.data();
        let rsvpStatus = '';
        switch (data.rsvp) {
          case 'accepted': rsvpStatus = 'S·∫Ω tham d·ª± üíñ'; break;
          case 'declined': rsvpStatus = 'Kh√¥ng tham d·ª± üò¢'; break;
          default: rsvpStatus = 'Ch∆∞a ph·∫£n h·ªìi';
        }

        invitationDiv.innerHTML = `
          <h2>Ch√†o b·∫°n, ${data.name}!</h2>
          <p>${data.message}</p>
          <p>Ch√∫ng t√¥i r·∫•t mong b·∫°n ƒë·∫øn chung vui c√πng ch√∫ng t√¥i.</p>
          <p><strong>Tr·∫°ng th√°i ph·∫£n h·ªìi:</strong> ${rsvpStatus}</p>
        `;

        if (data.rsvp === 'pending') {
          rsvpDiv.style.display = 'block';
        }
      } else {
        invitationDiv.innerHTML = '<p>Kh√¥ng t√¨m th·∫•y th√¥ng tin kh√°ch m·ªùi.</p>';
      }
    })
    .catch(error => {
      invitationDiv.innerHTML = `<p>L·ªói khi t·∫£i d·ªØ li·ªáu: ${error.message}</p>`;
    });
}

function sendRSVP(status) {
  const confirmText = status === 'accepted'
    ? 'B·∫°n x√°c nh·∫≠n s·∫Ω tham d·ª± ch·ª©?'
    : 'B·∫°n x√°c nh·∫≠n s·∫Ω kh√¥ng tham d·ª±?';

  if (!confirm(confirmText)) return;

  db.collection('guests').doc(guestId).update({ rsvp: status })
    .then(() => {
      alert('C·∫£m ∆°n b·∫°n ƒë√£ ph·∫£n h·ªìi!');
      location.reload();
    })
    .catch(err => {
      alert('L·ªói khi g·ª≠i ph·∫£n h·ªìi: ' + err.message);
    });
}
